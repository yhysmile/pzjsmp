<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 连接池中最大连接数。高版本：maxTotal，低版本：maxActive -->
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <!-- 连接池中最大空闲的连接数 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <!-- 连接池中最少空闲的连接数 -->
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <!-- 当连接池资源耗尽时，调用者最大阻塞的时间，超时将跑出异常。单位，毫秒数;默认为-1.表示永不超时。高版本：maxWaitMillis，低版本：maxWait -->
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
        <!-- 连接空闲的最小时间，达到此值后空闲连接将可能会被移除。负值(-1)表示不移除. -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <!-- 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3 -->
        <property name="numTestsPerEvictionRun" value="3" />
        <!-- “空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1. -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。默认为false。建议保持默认值 -->
        <property name="testOnBorrow" value="false"/>
        <!-- 向连接池“归还”链接时，是否检测“链接”对象的有效性。默认为false。建议保持默认值 -->
        <property name="testOnReturn" value="false"/>
        <!-- 向调用者输出“链接”对象时，是否检测它的空闲超时；默认为false。如果“链接”空闲超时，将会被移除。建议保持默认值. -->
        <property name="testWhileIdle" value="false"/>
        <!-- whenExhaustedAction:当“连接池”中active数量达到阀值时，即“链接”资源耗尽时，连接池需要采取的手段, 默认为1(0:抛出异常。1:阻塞，直到有可用链接资源。2:强制创建新的链接资源) -->


    </bean>

<!--
    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool" scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.uri}"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
-->

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.uri}" />
    </bean>

    <bean id="jedis" factory-bean="jedisPool" factory-method="getResource"/>

    <bean id="redisCacheContext" class="com.pzj.framework.cache.context.RedisCacheContext">
        <property name="jedis" ref="jedis"/>
    </bean>

    <bean id="cacheService" factory-bean="redisCacheContext" factory-method="getCacheService" />

    <bean id="schedulingService" class="com.pzj.core.smp.scheduling.SchedulingService" />

    <bean class="com.pzj.core.smp.scheduling.SchedulingMessageService_v5">
        <constructor-arg index="0" name="cacheService" ref="cacheService" />
        <constructor-arg index="1" name="schedulingService" ref="schedulingService" />
    </bean>

    <bean class="com.pzj.core.smp.scheduling.SchedulingMessageService">
        <constructor-arg index="0" name="cacheService" ref="cacheService" />
        <constructor-arg index="1" name="schedulingService" ref="schedulingService" />
    </bean>

    <bean class="com.pzj.core.smp.delivery.ShortMessageServiceImpl">

    </bean>
</beans>